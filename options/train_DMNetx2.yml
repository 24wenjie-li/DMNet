# general settings
name: DMNetx2_train
model_type: SRModel
scale: 2
num_gpu: auto
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: DIV2K
    type: PairedImageDataset
    dataroot_gt: /data/wenjieli/SISR_datasets/DIV2K/DIV2K_train_HR/
    dataroot_lq: /data/wenjieli/SISR_datasets/DIV2K/DIV2K_train_LR_bicubic/X2/
    filename_tmpl: '{}x2'
    io_backend:
      type: disk

    gt_size: 128
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # --- validation
  val_1:
    name: Set5
    type: PairedImageDataset
    dataroot_gt: /data/wenjieli/SISR_datasets/benchmark/Set5/HR/
    dataroot_lq: /data/wenjieli/SISR_datasets/benchmark/Set5/LR_bicubic/X2/
    filename_tmpl: '{}x2'
    io_backend:
      type: disk


# network structures
network_g:
  type: DMNet
  upscale: 2
  in_chans: 3
  dim: 48
  groups: 3
  blocks: 3
  buildblock_type: 'Wave'
  window_size: 7
  idynamic_num_heads: 6
  idynamic_ffn_type: 'GDFN'
  idynamic_ffn_expansion_factor: 2.
  idynamic: true
  restormer_num_heads: 8
  restormer_ffn_type: 'GDFN'
  restormer_ffn_expansion_factor: 2.
  tlc_flag: true
  tlc_kernel: 48 #64    # using tlc during validation
  activation: 'relu'
  body_norm: false
  img_range: 1.
  upsampler: 'pixelshuffledirect'


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# all the training settings are based on SwinIR except for learning rate
# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 5e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [250000, 400000, 450000, 475000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  fft_opt:
    type: FFTLoss
    loss_weight: 0.1
    reduction: mean

  wave_opt:
    type: MSELoss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e4
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true

# logging settings
logger:
  print_freq: 2000
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~ #AdjustWavex4
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500